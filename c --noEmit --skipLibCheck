[33mcommit d69e07b100efc7c9a141ab60e638d0e039fcbfa0[m
Author: User <user@local>
Date:   Thu Sep 25 13:28:49 2025 +0300

    Improve PDF text parser and adjust OpenAI config

[1mdiff --git a/src/services/invoiceParser.ts b/src/services/invoiceParser.ts[m
[1mindex 14db96f..5a4c7fa 100644[m
[1m--- a/src/services/invoiceParser.ts[m
[1m+++ b/src/services/invoiceParser.ts[m
[36m@@ -134,50 +134,90 @@[m [mexport async function extractInvoiceData(file: File): Promise<InvoiceProcessingR[m
         productCount: parsedData.products.length,[m
         products: parsedData.products.map(p => p.productName)[m
       });[m
[31m-      [m
[31m-      // Skip broken text extraction - use OpenAI Vision OCR instead[m
[31m-      if (false && parsedData.products.length > 0) {[m
[31m-        console.log('⚠️ Skipping broken text extraction - using OpenAI Vision OCR');[m
[31m-        [m
[31m-        // Use the actual parsed data from PDF text extraction[m
[31m-        const correctProducts = parsedData.products.map((product: any) => ({[m
[31m-          productName: product.productName,[m
[31m-          description: product.description || product.productName,[m
[31m-          quantity: product.quantity || 1,[m
[31m-          unit: normalizeUnit(product.unit) || 'kg',[m
[31m-          unitPrice: product.unitPrice || 0,[m
[31m-          totalPrice: product.totalPrice || 0,[m
[31m-          vatRate: 21,[m
[31m-          needsReview: true,[m
[31m-          createdAt: new Date().toISOString(),[m
[31m-          updatedAt: new Date().toISOString()[m
[31m-        }));[m
[31m-[m
[31m-        const invoiceNumber = (parsedData as any).invoice?.invoiceNumber || 'FL000000';[m
[31m-        const invoiceDate = (parsedData as any).invoice?.invoiceDate || '2025-09-01';[m
[31m-        [m
[31m-        // Calculate totals from the actual PDF (FL238517 totals)[m
[31m-        const totalExclVat = invoiceNumber === 'FL238517' ? 143.31 : 174.33;[m
[31m-        const totalInclVat = invoiceNumber === 'FL238517' ? 173.41 : 210.94;[m
[31m-        const vatAmount = totalInclVat - totalExclVat;[m
[31m-        [m
[32m+[m
[32m+[m[32m      if (parsedData.products.length > 0) {[m
[32m+[m[32m        console.log('✅ Using direct PDF text extraction (structured table parsing)');[m
[32m+[m
[32m+[m[32m        processingInfo.service = 'PDF Text Extraction';[m
[32m+[m[32m        processingInfo.parser = 'pdf-text-layer';[m
[32m+[m[32m        processingInfo.pdfTextExtraction = true;[m
[32m+[m
[32m+[m[32m        const nowIso = new Date().toISOString();[m
[32m+[m[32m        const invoiceNumber = parsedData.invoice?.invoiceNumber || 'PDF-INVOICE';[m
[32m+[m[32m        const invoiceDate = parsedData.invoice?.invoiceDate || new Date().toISOString().split('T')[0];[m
[32m+[m
[32m+[m[32m        const lineItems = parsedData.products.map((product, index) => {[m
[32m+[m[32m          const sanitizedName = sanitizeProductName(product.productName || product.description || `Product ${index + 1}`);[m
[32m+[m[32m          const description = sanitizeProductName(product.description || product.productName || sanitizedName);[m
[32m+[m[32m          const quantity = parseNumber(product.quantity ?? 1) || 1;[m
[32m+[m[32m          const unitPrice = parseNumber(product.unitPrice ?? 0);[m
[32m+[m[32m          const computedTotal = Math.round(quantity * unitPrice * 100) / 100;[m
[32m+[m[32m          const totalPrice = parseNumber(product.totalPrice ?? computedTotal) || computedTotal;[m
[32m+[m
[32m+[m[32m          return {[m
[32m+[m[32m            productName: sanitizedName,[m
[32m+[m[32m            description,[m
[32m+[m[32m            quantity,[m
[32m+[m[32m            unit: normalizeUnit(product.unit || 'pcs'),[m
[32m+[m[32m            unitPrice,[m
[32m+[m[32m            totalPrice,[m
[32m+[m[32m            vatRate: typeof product.vatRate === 'number' ? product.vatRate : 21,[m
[32m+[m[32m            needsReview: false,[m
[32m+[m[32m            notes: product.expiryDate ? `Use by ${product.expiryDate}` : undefined,[m
[32m+[m[32m            createdAt: nowIso,[m
[32m+[m[32m            updatedAt: nowIso[m
[32m+[m[32m          };[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        const computedLineTotal = lineItems.reduce((sum, item) => sum + (item.totalPrice || 0), 0);[m
[32m+[m[32m        const productsDiscountTotal = parsedData.products.reduce((sum, product) => sum + (product.discountAmount || 0), 0);[m
[32m+[m
[32m+[m[32m        const totalExclVat = parseNumber(parsedData.invoice?.totalExclVat ?? computedLineTotal);[m
[32m+[m[32m        const vatAmount = parsedData.invoice?.vatAmount !== undefined[m
[32m+[m[32m          ? parseNumber(parsedData.invoice.vatAmount)[m
[32m+[m[32m          : (parsedData.invoice?.totalInclVat !== undefined[m
[32m+[m[32m            ? parseNumber(parsedData.invoice.totalInclVat) - totalExclVat[m
[32m+[m[32m            : 0);[m
[32m+[m[32m        const totalInclVat = parsedData.invoice?.totalInclVat !== undefined[m
[32m+[m[32m          ? parseNumber(parsedData.invoice.totalInclVat)[m
[32m+[m[32m          : totalExclVat + vatAmount;[m
[32m+[m[32m        const discountAmount = parseNumber(parsedData.invoice?.discountAmount ?? productsDiscountTotal);[m
[32m+[m
[32m+[m[32m        const toCurrency = (value: number) => Math.round(value * 100) / 100;[m
[32m+[m
[32m+[m[32m        const matches = await findProductMatches(lineItems);[m
[32m+[m
         return {[m
[31m-      invoice: {[m
[32m+[m[32m          invoice: {[m
             invoiceNumber,[m
             invoiceDate,[m
[31m-            totalExclVat,[m
[31m-            totalInclVat,[m
[31m-            vatAmount,[m
[31m-            discountAmount: 0,[m
[32m+[m[32m            totalExclVat: toCurrency(totalExclVat),[m
[32m+[m[32m            totalInclVat: toCurrency(totalInclVat),[m
[32m+[m[32m            vatAmount: toCurrency(vatAmount),[m
[32m+[m[32m            discountAmount: toCurrency(discountAmount),[m
             currency: 'EUR' as const,[m
[31m-            status: 'pending' as const[m
[32m+[m[32m            status: 'review' as const,[m
[32m+[m[32m            fileName: file.name,[m
[32m+[m[32m            fileSize: file.size,[m
[32m+[m[32m            mimeType: file.type,[m
[32m+[m[32m            extractedData: {[m
[32m+[m[32m              parser: 'pdf-text-extraction',[m
[32m+[m[32m              rawText: parsedData.rawText,[m
[32m+[m[32m              products: parsedData.products,[m
[32m+[m[32m              invoice: parsedData.invoice[m
[32m+[m[32m            },[m
[32m+[m[32m            createdAt: nowIso,[m
[32m+[m[32m            updatedAt: nowIso[m
           },[m
[31m-          lineItems: correctProducts,[m
[31m-      matches: {},[m
[31m-      errors: [],[m
[31m-          warnings: [`Using direct text extraction from ${invoiceNumber}`],[m
[31m-          supplierInfo: {[m
[31m-            name: 'UAB "Foodlevel"'[m
[32m+[m[32m          lineItems,[m
[32m+[m[32m          matches,[m
[32m+[m[32m          errors: [],[m
[32m+[m[32m          warnings: ['Processed using PDF text extraction'],[m
[32m+[m[32m          supplierInfo: parsedData.supplier ? {[m
[32m+[m[32m            name: parsedData.supplier.name[m
[32m+[m[32m          } : undefined,[m
[32m+[m[32m          processingInfo: {[m
[32m+[m[32m            ...processingInfo[m
           }[m
         };[m
       }[m
[1mdiff --git a/src/services/openaiModels.ts b/src/services/openaiModels.ts[m
[1mindex 1b5c519..0b344e5 100644[m
[1m--- a/src/services/openaiModels.ts[m
[1m+++ b/src/services/openaiModels.ts[m
[36m@@ -15,7 +15,7 @@[m [mexport const OPENAI_MODELS = {[m
   'gpt-4-turbo': {[m
     name: 'GPT-4 Turbo Vision', [m
     description: 'Faster processing - good for standard invoices',[m
[31m-    maxTokens: 12000,[m
[32m+[m[32m    maxTokens: 3500,[m
     temperature: 0.0,[m
     strengths: 